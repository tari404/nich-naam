(function(){"use strict";var e={9095:function(e,n,t){var i=t(9242),r=t(3396);function a(e,n,t,i,a,o){const s=(0,r.up)("TestScene");return(0,r.wg)(),(0,r.j4)(s)}var o=t(7139);const s={class:"menu"},c={class:"log"},l={ref:"canvas",class:"canvas-body"};function d(e,n,t,i,a,d){return(0,r.wg)(),(0,r.iD)(r.HY,null,[(0,r._)("div",s,[(0,r._)("button",{onClick:n[0]||(n[0]=(...n)=>e.record&&e.record(...n))},"record"),(0,r._)("button",{onClick:n[1]||(n[1]=(...n)=>e.test&&e.test(...n))},"test"),(0,r._)("p",c,(0,o.zw)(e.log),1)]),(0,r._)("section",l,null,512)],64)}var m=t(2482),f=(t(7658),t(1114));function u(){const e=new f.WebGLRenderer({antialias:!0});return e.shadowMap.enabled=!0,e.shadowMap.type=f.PCFSoftShadowMap,e.outputEncoding=f.sRGBEncoding,e}var p=t(9449),g=t(2338),h="#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\nuniform float time;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nconst float SHAPE_SIZE = .618;\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat getColorComponent(in vec2 st, in float modScale, in float blur) {\n\tvec2 modSt = mod(st, 1. / modScale) * modScale * 2. - 1.;\n\tfloat dist = length(modSt);\n\tfloat angle = atan(st.x, st.y) + sin(time * .08) * 9.0;\n\t//dist = sdPolygon(angle, dist);\n\tdist += sin(angle * 3. + time * .21) * .2 + cos(angle * 4. - time * .3) * .1;\n\tfloat shapeMap = smoothstep(SHAPE_SIZE + blur, SHAPE_SIZE - blur, sin(dist * 3.0) * .5 + .5);\n\treturn shapeMap;\n}\n\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\n\t// custom start\n\t// outgoingLight = vNormal;\n  float blur = .4 + sin(time * .52) * .0;\n\tvec2 st = (normalize(vViewPosition) + vNormal).xy;\n\tst *= rotate2d(sin(time * .14) * .3);\n\tst *= (sin(time * .15) + 2.) * .3;\n\tst *= log(length(st * .428)) * 1.1;\n\n\tvec3 color = vec3(0);\n\tfloat luma = 0.5;\n\tfloat modScale = 0.9 + sin(time) * 0.6;\n\tfor (float i = 0.; i < 4.0; i++) {\n\t\t\tvec2 center = st + vec2(sin(time * .12), cos(time * .13));\n\t\t\t//center += pow(length(center), 1.);\n\t\t\tvec3 shapeColor = vec3(\n\t\t\t\t\tgetColorComponent(center - st * 0.2, modScale, blur),\n\t\t\t\t\tgetColorComponent(center, modScale, blur),\n\t\t\t\t\tgetColorComponent(center + st * 0.2, modScale, blur)        \n\t\t\t) * luma;\n\t\t\tst *= 1.1 + getColorComponent(center, modScale, .04) * 1.2;\n\t\t\tst *= rotate2d(sin(time  * .05) * 1.33);\n\t\t\tcolor += shapeColor;\n\t\t\t// color = clamp(color, 0., 1.);\n\t\t\t// if (color == vec3(1)) break;\n\t\t\tluma *= .7;\n\t\t\tblur *= .63;\n    }\n\toutgoingLight = color;\n\t// custom end\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";const _=new f.Mesh(new f.TorusKnotGeometry(1,.15,200,16,2,5),new f.ShaderMaterial({uniforms:{...f.ShaderLib.standard.uniforms,time:{value:0}},vertexShader:f.ShaderLib.standard.vertexShader,fragmentShader:h,lights:!0,fog:!0}));window.THREE=f;class v{constructor(){(0,m.Z)(this,"width",void 0),(0,m.Z)(this,"height",void 0),(0,m.Z)(this,"renderer",void 0),(0,m.Z)(this,"scene",void 0),(0,m.Z)(this,"camera",void 0),(0,m.Z)(this,"composer",void 0),(0,m.Z)(this,"skip",!1),(0,m.Z)(this,"raf",0),this.renderer=u(),this.scene=new f.Scene,this.camera=new f.PerspectiveCamera(60,window.innerWidth/window.innerHeight,1,2e3),this.camera.position.set(0,3,4),this.camera.lookAt(0,0,0),this.width=window.innerWidth,this.height=window.innerHeight;const e=new p.xC(this.renderer),n=new g.C(this.scene,this.camera);e.addPass(n),this.composer=e}get domElement(){return this.renderer.domElement}start(){this.raf=requestAnimationFrame((e=>{this.render(e)}))}dispose(){cancelAnimationFrame(this.raf),this.renderer.dispose()}initTestScene(){this.scene.add(_),_.castShadow=!0,_.receiveShadow=!0;const e=new f.HemisphereLight(16777198,4737152,.4);this.scene.add(e);const n=new f.DirectionalLight(16777215,.4);n.castShadow=!0,n.shadow.mapSize.set(4096,4096),n.position.set(.54,.81,-.2);const t=window.innerHeight/window.innerWidth,i=1.8584+1.4779*t+.1,r=1.0421+3.9332*t+.1;n.shadow.camera.left=-r,n.shadow.camera.right=r,n.shadow.camera.bottom=-i,n.shadow.camera.top=i,n.shadow.camera.near=-100,n.shadow.camera.far=100,this.scene.add(n)}resize(e,n){this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(e,n),this.camera.aspect=e/n,this.camera.updateProjectionMatrix(),this.width=e,this.height=n}record(e=5e3){const n=[["video/webm",".webm"],["video/quicktime",".mov"],["video/ogg",".ogg"],["video/mp4",".mp4"]],t=n.find((e=>MediaRecorder.isTypeSupported(e[0])));if(!t)return!1;const[i,r]=t,a=[],o=this.domElement.captureStream(30),s=new MediaRecorder(o,{mimeType:i});return s.start(0),setTimeout((()=>{s.stop()}),e),s.ondataavailable=function(e){a.push(e.data)},s.onstop=function(){const e=new Blob(a,{type:i}),n=URL.createObjectURL(e),t=document.createElement("a");t.download="record"+r,t.href=n,t.dispatchEvent(new MouseEvent("click"))},r}update(e){_.rotateY(.02),_.rotateX(.01),_.material.uniforms.time.value=e/1e3}render(e){this.update(e),this.skip||this.composer.render(),this.skip=!this.skip,this.raf=requestAnimationFrame((e=>{this.render(e)}))}}const S=new v;var w=(0,r.aZ)({name:"TestScene",data(){return{log:""}},mounted(){const e=this.$refs.canvas;e.appendChild(S.domElement),S.resize(window.innerWidth,window.innerHeight),S.initTestScene(),S.start()},beforeUnmount(){S.dispose()},methods:{record(){const e=S.record();this.log=e?"record next 5 second":"unable to record"},test(){const e=[["video/webm",".webm"],["video/quicktime",".mov"],["video/ogg",".ogg"],["video/mp4",".mp4"]],n=e.map((e=>[...e,MediaRecorder.isTypeSupported(e[0])])),t=n.find((e=>e[2]));let i=n.map((([e,n,t])=>(t?"✔ ":"✖ ")+e)).join("\n");return t&&(i+=`\nSelected: ${t[1]}`),this.log=i,t}}}),b=t(89);const E=(0,b.Z)(w,[["render",d],["__scopeId","data-v-ed368340"]]);var C=E,y=(0,r.aZ)({name:"App",components:{TestScene:C}});const R=(0,b.Z)(y,[["render",a]]);var L=R;(0,i.ri)(L).mount("#app")}},n={};function t(i){var r=n[i];if(void 0!==r)return r.exports;var a=n[i]={exports:{}};return e[i](a,a.exports,t),a.exports}t.m=e,function(){var e=[];t.O=function(n,i,r,a){if(!i){var o=1/0;for(d=0;d<e.length;d++){i=e[d][0],r=e[d][1],a=e[d][2];for(var s=!0,c=0;c<i.length;c++)(!1&a||o>=a)&&Object.keys(t.O).every((function(e){return t.O[e](i[c])}))?i.splice(c--,1):(s=!1,a<o&&(o=a));if(s){e.splice(d--,1);var l=r();void 0!==l&&(n=l)}}return n}a=a||0;for(var d=e.length;d>0&&e[d-1][2]>a;d--)e[d]=e[d-1];e[d]=[i,r,a]}}(),function(){t.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(n,{a:n}),n}}(),function(){t.d=function(e,n){for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)}}(),function(){t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={143:0};t.O.j=function(n){return 0===e[n]};var n=function(n,i){var r,a,o=i[0],s=i[1],c=i[2],l=0;if(o.some((function(n){return 0!==e[n]}))){for(r in s)t.o(s,r)&&(t.m[r]=s[r]);if(c)var d=c(t)}for(n&&n(i);l<o.length;l++)a=o[l],t.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return t.O(d)},i=self["webpackChunkflower"]=self["webpackChunkflower"]||[];i.forEach(n.bind(null,0)),i.push=n.bind(null,i.push.bind(i))}();var i=t.O(void 0,[998],(function(){return t(9095)}));i=t.O(i)})();
//# sourceMappingURL=app.31bb461f.js.map